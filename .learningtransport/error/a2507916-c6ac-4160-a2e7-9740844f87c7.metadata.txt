{
  "NServiceBus.MessageId": "6dca616b-1a9f-4b31-8df0-a927004d5b66",
  "NServiceBus.MessageIntent": "Publish",
  "NServiceBus.RelatedTo": "7bc0b199-ff1a-4943-b2ba-a927004d5b41",
  "NServiceBus.ConversationId": "a01e1b15-299b-48ba-84ac-a927004d5b43",
  "NServiceBus.CorrelationId": "7bc0b199-ff1a-4943-b2ba-a927004d5b41",
  "NServiceBus.OriginatingMachine": "SAURON",
  "NServiceBus.OriginatingEndpoint": "Payments",
  "$.diagnostics.originating.hostid": "b4637cd271a623e3a13feb6419d20c0f",
  "NServiceBus.ReplyToAddress": "Payments",
  "NServiceBus.ContentType": "text\/xml",
  "NServiceBus.EnclosedMessageTypes": "ConcertManager.Messages.CreditCardCharged, ConcertManager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
  "NServiceBus.Version": "7.0.1",
  "NServiceBus.TimeSent": "2018-07-24 04:41:38:916182 Z",
  "NServiceBus.ExceptionInfo.ExceptionType": "System.InvalidOperationException",
  "NServiceBus.Retries.Timestamp": "2018-07-24 04:42:11:903633 Z",
  "NServiceBus.ExceptionInfo.InnerExceptionType": "System.InvalidOperationException",
  "NServiceBus.ExceptionInfo.HelpLink": null,
  "NServiceBus.ExceptionInfo.Message": "Unable to resolve type: ConcertManager.PaymentResponseManager, service name: ",
  "NServiceBus.ExceptionInfo.Source": "NServiceBus.Core",
  "NServiceBus.ExceptionInfo.StackTrace": "System.InvalidOperationException: Unable to resolve type: ConcertManager.PaymentResponseManager, service name:  ---> System.InvalidOperationException: Unresolved dependency [Target Type: ConcertManager.PaymentResponseManager], [Parameter: publisher(ConcertManager.Dispachers.IPublisher)], [Requested dependency: ServiceType:ConcertManager.Dispachers.IPublisher, ServiceName:]\u000d\u000a   at LightInject.ServiceContainer.GetEmitMethodForDependency(Dependency dependency)\u000d\u000a   at LightInject.ServiceContainer.EmitConstructorDependency(IEmitter emitter, Dependency dependency)\u000d\u000a   at LightInject.ServiceContainer.EmitConstructorDependencies(ConstructionInfo constructionInfo, IEmitter emitter, Action`1 decoratorTargetEmitter)\u000d\u000a   at LightInject.ServiceContainer.EmitNewInstanceUsingImplementingType(IEmitter emitter, ConstructionInfo constructionInfo, Action`1 decoratorTargetEmitMethod)\u000d\u000a   at LightInject.ServiceContainer.EmitNewInstance(ServiceRegistration serviceRegistration, IEmitter emitter)\u000d\u000a   at LightInject.ServiceContainer.EmitNewInstanceWithDecorators(ServiceRegistration serviceRegistration, IEmitter emitter)\u000d\u000a   at LightInject.ServiceContainer.<>c__DisplayClass184_0.<ResolveEmitMethod>b__2(IEmitter ms)\u000d\u000a   at LightInject.ServiceContainer.CreateDynamicMethodDelegate(Action`1 serviceEmitter)\u000d\u000a   at LightInject.ServiceContainer.CreateInstanceDelegateIndex(Action`1 emitMethod)\u000d\u000a   at LightInject.ServiceContainer.EmitLifetime(ServiceRegistration serviceRegistration, Action`1 emitMethod, IEmitter emitter)\u000d\u000a   at LightInject.ServiceContainer.<>c__DisplayClass184_0.<ResolveEmitMethod>b__1(IEmitter methodSkeleton)\u000d\u000a   at LightInject.ServiceContainer.<>c__DisplayClass139_0.<CreateEmitMethodWrapper>b__0(IEmitter ms)\u000d\u000a   at LightInject.ServiceContainer.CreateDynamicMethodDelegate(Action`1 serviceEmitter)\u000d\u000a   at LightInject.ServiceContainer.CreateDelegate(Type serviceType, String serviceName, Boolean throwError)\u000d\u000a   --- End of inner exception stack trace ---\u000d\u000a   at LightInject.ServiceContainer.CreateDelegate(Type serviceType, String serviceName, Boolean throwError)\u000d\u000a   at LightInject.ServiceContainer.CreateDefaultDelegate(Type serviceType, Boolean throwError)\u000d\u000a   at LightInject.ServiceContainer.GetInstance(Type serviceType)\u000d\u000a   at LightInject.Scope.<>c__DisplayClass22_0.<GetInstance>b__0()\u000d\u000a   at LightInject.Scope.WithThisScope[T](Func`1 function)\u000d\u000a   at LightInject.Scope.GetInstance(Type serviceType)\u000d\u000a   at NServiceBus.LightInjectObjectBuilder.Build(Type typeToBuild)\u000d\u000a   at NServiceBus.CommonObjectBuilder.Build(Type typeToBuild)\u000d\u000a   at NServiceBus.LoadHandlersConnector.<Invoke>d__1.MoveNext()\u000d\u000a--- End of stack trace from previous location where exception was thrown ---\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\u000d\u000a   at NServiceBus.DeserializeLogicalMessagesConnector.<Invoke>d__1.MoveNext()\u000d\u000a--- End of stack trace from previous location where exception was thrown ---\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\u000d\u000a   at NServiceBus.ProcessingStatisticsBehavior.<Invoke>d__0.MoveNext()\u000d\u000a--- End of stack trace from previous location where exception was thrown ---\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\u000d\u000a   at NServiceBus.TransportReceiveToPhysicalMessageProcessingConnector.<Invoke>d__1.MoveNext()\u000d\u000a--- End of stack trace from previous location where exception was thrown ---\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\u000d\u000a   at NServiceBus.MainPipelineExecutor.<Invoke>d__1.MoveNext()\u000d\u000a--- End of stack trace from previous location where exception was thrown ---\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\u000d\u000a   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\u000d\u000a   at NServiceBus.LearningTransportMessagePump.<ProcessFile>d__9.MoveNext()",
  "NServiceBus.TimeOfFailure": "2018-07-24 04:42:42:959300 Z",
  "NServiceBus.FailedQ": "Payments",
  "NServiceBus.ProcessingMachine": "SAURON",
  "NServiceBus.ProcessingEndpoint": "Payments",
  "$.diagnostics.hostid": "b4637cd271a623e3a13feb6419d20c0f",
  "$.diagnostics.hostdisplayname": "SAURON"
}